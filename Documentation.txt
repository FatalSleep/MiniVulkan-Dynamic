The MiniVulkan API is a simplified dev-platform for using Vulkan & GLFW (Window API) to make games.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

Vulkan requires the GLFW library linkage for native Window handling on Microsoft Windows.
GLFWV will only compile on both Release and Debug with the following options:

C/C++ | Code Configuration | Runtime Libraries:
    RELEASE: /MD
    DEBUG  : /mtD

Linker | Input | Additional Dependencies:
    RELEASE: vulkan-1.lib;glfw3.lib;
    DEBUG  : vulkan-1.lib;glfw3_mt.lib;

C/C++ | General | Additional Include Directories:
    RELEASE: ...\VulkanSDK\1.3.211.0\Include;...\glfw-3.3.7.bin.WIN64\glfw-3.3.7.bin.WIN64\include;
    DEBUG  : ...\VulkanSDK\1.3.211.0\Include;...\glfw-3.3.7.bin.WIN64\glfw-3.3.7.bin.WIN64\include;

Linker | General | Additional Library Directories:
    RELEASE: ...\glfw-3.3.7.bin.WIN64\lib-vc2022;$(VULKAN_SDK)\Lib;
    DEBUG  : ...\glfw-3.3.7.bin.WIN64\lib-vc2022;$(VULKAN_SDK)\Lib;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

Once you've linked to the Vulkan SDK then link to the MiniVulkan library for all configurations:

Linker | Input | Additional Dependencies:
    ADD: minivulkan.lib;

C/C++ | General | Additional Include Directories:
    ADD: ...\minivulkan\include;

Linker | General | Additional Library Directories:
    ADD: ...\minivulkan\include;

Or optionally include MiniVulkan source directly in your project.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////

You can use #define MINIVULKAN_SHORTREF to use the alias miniv for the minivulkan namespace.
You can use #define MINIVULKCAN_NS namespacename to change the minivulkan namespace name.
Each MiniVulkan header has a complete tutorial on how to use each class/function.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////